@page "/market"

<h3>US Market</h3>

@using StockApp.Client.Interfaces
@using StockApp.Shared.Models
@using Microsoft.FluentUI.AspNetCore.Components
@using ScottPlot.Blazor
@using ScottPlot.Finance
@using ScottPlot
@inject IQuoteService quoteService
@attribute [Authorize]

<div class="responsive-grid">
    @if (quoteData is not null)
    {
        @foreach (var quote in quoteData)
        {
            <div class="grid-item">
                <span class="label"><a href="/candlestick?symbol=@quote.Symbol">@quote.Symbol</a></span>
                <span class="value">@quote.RegularMarketPrice.ToString("F2")</span>
            </div>
            <div class="grid-item" style="border-bottom: 1px dashed #ccc;">
                <span class="label">@quote.LongName</span>
                <span class="value @(quote.RegularMarketChange >= 0 ? "text-success":"text-danger")">@quote.RegularMarketChange.ToString("F2") (@quote.RegularMarketChangePercent.ToString("F2")%)</span>
            </div>
        }
    }   
</div>

@code {
    public string[] Symbol { get; set; } = { "^DJI", "^GSPC", "^IXIC", "^RUT^DJI", "^GSPC", "^IXIC", "^RUT" };

    private List<Result> quoteData = new();

    JustifyContent Justification = JustifyContent.FlexStart;

    int Spacing = 1;

    protected override async Task OnInitializedAsync()
    {
        var stockData = await quoteService.GetQuotesData(Symbol);
        quoteData = stockData.Data.QuoteResponse.Result;
    }
}
